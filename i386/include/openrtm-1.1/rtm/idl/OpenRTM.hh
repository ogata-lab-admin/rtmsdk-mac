// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __OpenRTM_hh__
#define __OpenRTM_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_OpenRTM
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_OpenRTM
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_OpenRTM
#endif



#ifndef __SDOPackage_hh_EXTERNAL_GUARD__
#define __SDOPackage_hh_EXTERNAL_GUARD__
#include <SDOPackage.hh>
#endif
#ifndef __RTC_hh_EXTERNAL_GUARD__
#define __RTC_hh_EXTERNAL_GUARD__
#include <RTC.hh>
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE OpenRTM

_CORBA_MODULE_BEG

#ifndef __OpenRTM_mDataFlowComponent__
#define __OpenRTM_mDataFlowComponent__

  class DataFlowComponent;
  class _objref_DataFlowComponent;
  class _impl_DataFlowComponent;
  
  typedef _objref_DataFlowComponent* DataFlowComponent_ptr;
  typedef DataFlowComponent_ptr DataFlowComponentRef;

  class DataFlowComponent_Helper {
  public:
    typedef DataFlowComponent_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_DataFlowComponent, DataFlowComponent_Helper> DataFlowComponent_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_DataFlowComponent,DataFlowComponent_Helper > DataFlowComponent_out;

#endif

  // interface DataFlowComponent
  class DataFlowComponent {
  public:
    // Declarations for this interface type.
    typedef DataFlowComponent_ptr _ptr_type;
    typedef DataFlowComponent_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_DataFlowComponent :
    public virtual RTC::_objref_RTObject,
    public virtual RTC::_objref_DataFlowComponent
  {
  public:
    

    inline _objref_DataFlowComponent()  { _PR_setobj(0); }  // nil
    _objref_DataFlowComponent(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_DataFlowComponent();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_DataFlowComponent(const _objref_DataFlowComponent&);
    _objref_DataFlowComponent& operator = (const _objref_DataFlowComponent&);
    // not implemented

    friend class DataFlowComponent;
  };

  class _pof_DataFlowComponent : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_DataFlowComponent() : _OMNI_NS(proxyObjectFactory)(DataFlowComponent::_PD_repoId) {}
    virtual ~_pof_DataFlowComponent();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_DataFlowComponent :
    public virtual RTC::_impl_RTObject,
    public virtual RTC::_impl_DataFlowComponent
  {
  public:
    virtual ~_impl_DataFlowComponent();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_DataFlowComponent;

#ifndef __OpenRTM_mExtTrigExecutionContextService__
#define __OpenRTM_mExtTrigExecutionContextService__

  class ExtTrigExecutionContextService;
  class _objref_ExtTrigExecutionContextService;
  class _impl_ExtTrigExecutionContextService;
  
  typedef _objref_ExtTrigExecutionContextService* ExtTrigExecutionContextService_ptr;
  typedef ExtTrigExecutionContextService_ptr ExtTrigExecutionContextServiceRef;

  class ExtTrigExecutionContextService_Helper {
  public:
    typedef ExtTrigExecutionContextService_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ExtTrigExecutionContextService, ExtTrigExecutionContextService_Helper> ExtTrigExecutionContextService_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ExtTrigExecutionContextService,ExtTrigExecutionContextService_Helper > ExtTrigExecutionContextService_out;

#endif

  // interface ExtTrigExecutionContextService
  class ExtTrigExecutionContextService {
  public:
    // Declarations for this interface type.
    typedef ExtTrigExecutionContextService_ptr _ptr_type;
    typedef ExtTrigExecutionContextService_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_ExtTrigExecutionContextService :
    public virtual RTC::_objref_ExecutionContextService
  {
  public:
    void tick();

    inline _objref_ExtTrigExecutionContextService()  { _PR_setobj(0); }  // nil
    _objref_ExtTrigExecutionContextService(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ExtTrigExecutionContextService();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ExtTrigExecutionContextService(const _objref_ExtTrigExecutionContextService&);
    _objref_ExtTrigExecutionContextService& operator = (const _objref_ExtTrigExecutionContextService&);
    // not implemented

    friend class ExtTrigExecutionContextService;
  };

  class _pof_ExtTrigExecutionContextService : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ExtTrigExecutionContextService() : _OMNI_NS(proxyObjectFactory)(ExtTrigExecutionContextService::_PD_repoId) {}
    virtual ~_pof_ExtTrigExecutionContextService();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ExtTrigExecutionContextService :
    public virtual RTC::_impl_ExecutionContextService
  {
  public:
    virtual ~_impl_ExtTrigExecutionContextService();

    virtual void tick() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ExtTrigExecutionContextService;

_CORBA_MODULE_END



_CORBA_MODULE POA_OpenRTM
_CORBA_MODULE_BEG

  class DataFlowComponent :
    public virtual OpenRTM::_impl_DataFlowComponent,
    public virtual POA_RTC::RTObject,
      public virtual POA_RTC::DataFlowComponent
  {
  public:
    virtual ~DataFlowComponent();

    inline ::OpenRTM::DataFlowComponent_ptr _this() {
      return (::OpenRTM::DataFlowComponent_ptr) _do_this(::OpenRTM::DataFlowComponent::_PD_repoId);
    }
  };

  class ExtTrigExecutionContextService :
    public virtual OpenRTM::_impl_ExtTrigExecutionContextService,
    public virtual POA_RTC::ExecutionContextService
  {
  public:
    virtual ~ExtTrigExecutionContextService();

    inline ::OpenRTM::ExtTrigExecutionContextService_ptr _this() {
      return (::OpenRTM::ExtTrigExecutionContextService_ptr) _do_this(::OpenRTM::ExtTrigExecutionContextService::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_OpenRTM
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, OpenRTM::DataFlowComponent_ptr _s);
void operator<<=(::CORBA::Any& _a, OpenRTM::DataFlowComponent_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, OpenRTM::DataFlowComponent_ptr& _s);

void operator<<=(::CORBA::Any& _a, OpenRTM::ExtTrigExecutionContextService_ptr _s);
void operator<<=(::CORBA::Any& _a, OpenRTM::ExtTrigExecutionContextService_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, OpenRTM::ExtTrigExecutionContextService_ptr& _s);



inline void
OpenRTM::DataFlowComponent::_marshalObjRef(::OpenRTM::DataFlowComponent_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
OpenRTM::ExtTrigExecutionContextService::_marshalObjRef(::OpenRTM::ExtTrigExecutionContextService_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_OpenRTM
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_OpenRTM
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_OpenRTM
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_OpenRTM
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_OpenRTM
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_OpenRTM
#endif

#endif  // __OpenRTM_hh__

