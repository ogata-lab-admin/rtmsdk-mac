// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "OpenRTM.hh"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



OpenRTM::DataFlowComponent_ptr OpenRTM::DataFlowComponent_Helper::_nil() {
  return ::OpenRTM::DataFlowComponent::_nil();
}

::CORBA::Boolean OpenRTM::DataFlowComponent_Helper::is_nil(::OpenRTM::DataFlowComponent_ptr p) {
  return ::CORBA::is_nil(p);

}

void OpenRTM::DataFlowComponent_Helper::release(::OpenRTM::DataFlowComponent_ptr p) {
  ::CORBA::release(p);
}

void OpenRTM::DataFlowComponent_Helper::marshalObjRef(::OpenRTM::DataFlowComponent_ptr obj, cdrStream& s) {
  ::OpenRTM::DataFlowComponent::_marshalObjRef(obj, s);
}

OpenRTM::DataFlowComponent_ptr OpenRTM::DataFlowComponent_Helper::unmarshalObjRef(cdrStream& s) {
  return ::OpenRTM::DataFlowComponent::_unmarshalObjRef(s);
}

void OpenRTM::DataFlowComponent_Helper::duplicate(::OpenRTM::DataFlowComponent_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

OpenRTM::DataFlowComponent_ptr
OpenRTM::DataFlowComponent::_duplicate(::OpenRTM::DataFlowComponent_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

OpenRTM::DataFlowComponent_ptr
OpenRTM::DataFlowComponent::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


OpenRTM::DataFlowComponent_ptr
OpenRTM::DataFlowComponent::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

OpenRTM::DataFlowComponent_ptr
OpenRTM::DataFlowComponent::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_DataFlowComponent _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_DataFlowComponent* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_DataFlowComponent;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* OpenRTM::DataFlowComponent::_PD_repoId = "IDL:openrtm.aist.go.jp/OpenRTM/DataFlowComponent:1.0";


typedef RTC::RTObject RTC_RTObject;
typedef RTC::_impl_RTObject RTC__impl_RTObject;
typedef RTC::_objref_RTObject RTC__objref_RTObject;

typedef RTC::DataFlowComponent RTC_DataFlowComponent;
typedef RTC::_impl_DataFlowComponent RTC__impl_DataFlowComponent;
typedef RTC::_objref_DataFlowComponent RTC__objref_DataFlowComponent;

typedef RTC::LightweightRTObject RTC_LightweightRTObject;
typedef RTC::_impl_LightweightRTObject RTC__impl_LightweightRTObject;
typedef RTC::_objref_LightweightRTObject RTC__objref_LightweightRTObject;

typedef SDOPackage::SDO SDOPackage_SDO;
typedef SDOPackage::_impl_SDO SDOPackage__impl_SDO;
typedef SDOPackage::_objref_SDO SDOPackage__objref_SDO;

typedef RTC::DataFlowComponentAction RTC_DataFlowComponentAction;
typedef RTC::_impl_DataFlowComponentAction RTC__impl_DataFlowComponentAction;
typedef RTC::_objref_DataFlowComponentAction RTC__objref_DataFlowComponentAction;

typedef RTC::ComponentAction RTC_ComponentAction;
typedef RTC::_impl_ComponentAction RTC__impl_ComponentAction;
typedef RTC::_objref_ComponentAction RTC__objref_ComponentAction;

typedef SDOPackage::SDOSystemElement SDOPackage_SDOSystemElement;
typedef SDOPackage::_impl_SDOSystemElement SDOPackage__impl_SDOSystemElement;
typedef SDOPackage::_objref_SDOSystemElement SDOPackage__objref_SDOSystemElement;

OpenRTM::_objref_DataFlowComponent::~_objref_DataFlowComponent() {
  
}


OpenRTM::_objref_DataFlowComponent::_objref_DataFlowComponent(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::OpenRTM::DataFlowComponent::_PD_repoId, ior, id, 1),
   RTC__objref_RTObject(ior, id),
   RTC__objref_DataFlowComponent(ior, id)
   
{
  _PR_setobj(this);
}

void*
OpenRTM::_objref_DataFlowComponent::_ptrToObjRef(const char* id)
{
  if( id == ::OpenRTM::DataFlowComponent::_PD_repoId )
    return (::OpenRTM::DataFlowComponent_ptr) this;
  if( id == ::RTC::RTObject::_PD_repoId )
    return (::RTC::RTObject_ptr) this;

  if( id == ::RTC::DataFlowComponent::_PD_repoId )
    return (::RTC::DataFlowComponent_ptr) this;

  if( id == ::RTC::LightweightRTObject::_PD_repoId )
    return (::RTC::LightweightRTObject_ptr) this;

  if( id == ::SDOPackage::SDO::_PD_repoId )
    return (::SDOPackage::SDO_ptr) this;

  if( id == ::RTC::DataFlowComponentAction::_PD_repoId )
    return (::RTC::DataFlowComponentAction_ptr) this;

  if( id == ::RTC::ComponentAction::_PD_repoId )
    return (::RTC::ComponentAction_ptr) this;

  if( id == ::SDOPackage::SDOSystemElement::_PD_repoId )
    return (::SDOPackage::SDOSystemElement_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::OpenRTM::DataFlowComponent::_PD_repoId) )
    return (::OpenRTM::DataFlowComponent_ptr) this;
  if( omni::strMatch(id, ::RTC::RTObject::_PD_repoId) )
    return (::RTC::RTObject_ptr) this;

  if( omni::strMatch(id, ::RTC::DataFlowComponent::_PD_repoId) )
    return (::RTC::DataFlowComponent_ptr) this;

  if( omni::strMatch(id, ::RTC::LightweightRTObject::_PD_repoId) )
    return (::RTC::LightweightRTObject_ptr) this;

  if( omni::strMatch(id, ::SDOPackage::SDO::_PD_repoId) )
    return (::SDOPackage::SDO_ptr) this;

  if( omni::strMatch(id, ::RTC::DataFlowComponentAction::_PD_repoId) )
    return (::RTC::DataFlowComponentAction_ptr) this;

  if( omni::strMatch(id, ::RTC::ComponentAction::_PD_repoId) )
    return (::RTC::ComponentAction_ptr) this;

  if( omni::strMatch(id, ::SDOPackage::SDOSystemElement::_PD_repoId) )
    return (::SDOPackage::SDOSystemElement_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

OpenRTM::_pof_DataFlowComponent::~_pof_DataFlowComponent() {}


omniObjRef*
OpenRTM::_pof_DataFlowComponent::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::OpenRTM::_objref_DataFlowComponent(ior, id);
}


::CORBA::Boolean
OpenRTM::_pof_DataFlowComponent::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::OpenRTM::DataFlowComponent::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, RTC::RTObject::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, RTC::DataFlowComponent::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, RTC::LightweightRTObject::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, SDOPackage::SDO::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, RTC::DataFlowComponentAction::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, RTC::ComponentAction::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, SDOPackage::SDOSystemElement::_PD_repoId) )
    return 1;


  return 0;
}

const OpenRTM::_pof_DataFlowComponent _the_pof_OpenRTM_mDataFlowComponent;

OpenRTM::_impl_DataFlowComponent::~_impl_DataFlowComponent() {}


::CORBA::Boolean
OpenRTM::_impl_DataFlowComponent::_dispatch(omniCallHandle& _handle)
{
  

  
#ifndef _MSC_VER
  if( RTC__impl_RTObject::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((RTC__impl_RTObject*)this)->
      RTC__impl_RTObject::_dispatch(_handle) ) {
    return 1;
  }
#endif

  
#ifndef _MSC_VER
  if( RTC__impl_DataFlowComponent::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((RTC__impl_DataFlowComponent*)this)->
      RTC__impl_DataFlowComponent::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
OpenRTM::_impl_DataFlowComponent::_ptrToInterface(const char* id)
{
  if( id == ::OpenRTM::DataFlowComponent::_PD_repoId )
    return (::OpenRTM::_impl_DataFlowComponent*) this;
  if( id == ::RTC::RTObject::_PD_repoId )
    return (::RTC::_impl_RTObject*) this;

  if( id == ::RTC::DataFlowComponent::_PD_repoId )
    return (::RTC::_impl_DataFlowComponent*) this;

  if( id == ::RTC::LightweightRTObject::_PD_repoId )
    return (::RTC::_impl_LightweightRTObject*) this;

  if( id == ::SDOPackage::SDO::_PD_repoId )
    return (::SDOPackage::_impl_SDO*) this;

  if( id == ::RTC::DataFlowComponentAction::_PD_repoId )
    return (::RTC::_impl_DataFlowComponentAction*) this;

  if( id == ::RTC::ComponentAction::_PD_repoId )
    return (::RTC::_impl_ComponentAction*) this;

  if( id == ::SDOPackage::SDOSystemElement::_PD_repoId )
    return (::SDOPackage::_impl_SDOSystemElement*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::OpenRTM::DataFlowComponent::_PD_repoId) )
    return (::OpenRTM::_impl_DataFlowComponent*) this;
  if( omni::strMatch(id, ::RTC::RTObject::_PD_repoId) )
    return (::RTC::_impl_RTObject*) this;

  if( omni::strMatch(id, ::RTC::DataFlowComponent::_PD_repoId) )
    return (::RTC::_impl_DataFlowComponent*) this;

  if( omni::strMatch(id, ::RTC::LightweightRTObject::_PD_repoId) )
    return (::RTC::_impl_LightweightRTObject*) this;

  if( omni::strMatch(id, ::SDOPackage::SDO::_PD_repoId) )
    return (::SDOPackage::_impl_SDO*) this;

  if( omni::strMatch(id, ::RTC::DataFlowComponentAction::_PD_repoId) )
    return (::RTC::_impl_DataFlowComponentAction*) this;

  if( omni::strMatch(id, ::RTC::ComponentAction::_PD_repoId) )
    return (::RTC::_impl_ComponentAction*) this;

  if( omni::strMatch(id, ::SDOPackage::SDOSystemElement::_PD_repoId) )
    return (::SDOPackage::_impl_SDOSystemElement*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
OpenRTM::_impl_DataFlowComponent::_mostDerivedRepoId()
{
  return ::OpenRTM::DataFlowComponent::_PD_repoId;
}

OpenRTM::ExtTrigExecutionContextService_ptr OpenRTM::ExtTrigExecutionContextService_Helper::_nil() {
  return ::OpenRTM::ExtTrigExecutionContextService::_nil();
}

::CORBA::Boolean OpenRTM::ExtTrigExecutionContextService_Helper::is_nil(::OpenRTM::ExtTrigExecutionContextService_ptr p) {
  return ::CORBA::is_nil(p);

}

void OpenRTM::ExtTrigExecutionContextService_Helper::release(::OpenRTM::ExtTrigExecutionContextService_ptr p) {
  ::CORBA::release(p);
}

void OpenRTM::ExtTrigExecutionContextService_Helper::marshalObjRef(::OpenRTM::ExtTrigExecutionContextService_ptr obj, cdrStream& s) {
  ::OpenRTM::ExtTrigExecutionContextService::_marshalObjRef(obj, s);
}

OpenRTM::ExtTrigExecutionContextService_ptr OpenRTM::ExtTrigExecutionContextService_Helper::unmarshalObjRef(cdrStream& s) {
  return ::OpenRTM::ExtTrigExecutionContextService::_unmarshalObjRef(s);
}

void OpenRTM::ExtTrigExecutionContextService_Helper::duplicate(::OpenRTM::ExtTrigExecutionContextService_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

OpenRTM::ExtTrigExecutionContextService_ptr
OpenRTM::ExtTrigExecutionContextService::_duplicate(::OpenRTM::ExtTrigExecutionContextService_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

OpenRTM::ExtTrigExecutionContextService_ptr
OpenRTM::ExtTrigExecutionContextService::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


OpenRTM::ExtTrigExecutionContextService_ptr
OpenRTM::ExtTrigExecutionContextService::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

OpenRTM::ExtTrigExecutionContextService_ptr
OpenRTM::ExtTrigExecutionContextService::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_ExtTrigExecutionContextService _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_ExtTrigExecutionContextService* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_ExtTrigExecutionContextService;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* OpenRTM::ExtTrigExecutionContextService::_PD_repoId = "IDL:openrtm.aist.go.jp/OpenRTM/ExtTrigExecutionContextService:1.0";


typedef RTC::ExecutionContextService RTC_ExecutionContextService;
typedef RTC::_impl_ExecutionContextService RTC__impl_ExecutionContextService;
typedef RTC::_objref_ExecutionContextService RTC__objref_ExecutionContextService;

typedef RTC::ExecutionContext RTC_ExecutionContext;
typedef RTC::_impl_ExecutionContext RTC__impl_ExecutionContext;
typedef RTC::_objref_ExecutionContext RTC__objref_ExecutionContext;

typedef SDOPackage::SDOService SDOPackage_SDOService;
typedef SDOPackage::_impl_SDOService SDOPackage__impl_SDOService;
typedef SDOPackage::_objref_SDOService SDOPackage__objref_SDOService;

OpenRTM::_objref_ExtTrigExecutionContextService::~_objref_ExtTrigExecutionContextService() {
  
}


OpenRTM::_objref_ExtTrigExecutionContextService::_objref_ExtTrigExecutionContextService(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::OpenRTM::ExtTrigExecutionContextService::_PD_repoId, ior, id, 1),
   RTC__objref_ExecutionContextService(ior, id)
   
{
  _PR_setobj(this);
}

void*
OpenRTM::_objref_ExtTrigExecutionContextService::_ptrToObjRef(const char* id)
{
  if( id == ::OpenRTM::ExtTrigExecutionContextService::_PD_repoId )
    return (::OpenRTM::ExtTrigExecutionContextService_ptr) this;
  if( id == ::RTC::ExecutionContextService::_PD_repoId )
    return (::RTC::ExecutionContextService_ptr) this;

  if( id == ::RTC::ExecutionContext::_PD_repoId )
    return (::RTC::ExecutionContext_ptr) this;

  if( id == ::SDOPackage::SDOService::_PD_repoId )
    return (::SDOPackage::SDOService_ptr) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::OpenRTM::ExtTrigExecutionContextService::_PD_repoId) )
    return (::OpenRTM::ExtTrigExecutionContextService_ptr) this;
  if( omni::strMatch(id, ::RTC::ExecutionContextService::_PD_repoId) )
    return (::RTC::ExecutionContextService_ptr) this;

  if( omni::strMatch(id, ::RTC::ExecutionContext::_PD_repoId) )
    return (::RTC::ExecutionContext_ptr) this;

  if( omni::strMatch(id, ::SDOPackage::SDOService::_PD_repoId) )
    return (::SDOPackage::SDOService_ptr) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_7db828b5a8f26db6_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_7db828b5a8f26db6_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, _user_exns, 0, upcall)
  {
    
  }
  
  
    
  
  static const char* const _user_exns[];

  
};

const char* const _0RL_cd_7db828b5a8f26db6_00000000::_user_exns[] = {
  0
};

// Local call call-back function.
static void
_0RL_lcfn_7db828b5a8f26db6_10000000(omniCallDescriptor*, omniServant* svnt)
{
  
  OpenRTM::_impl_ExtTrigExecutionContextService* impl = (OpenRTM::_impl_ExtTrigExecutionContextService*) svnt->_ptrToInterface(OpenRTM::ExtTrigExecutionContextService::_PD_repoId);
  impl->tick();


}

void OpenRTM::_objref_ExtTrigExecutionContextService::tick()
{
  _0RL_cd_7db828b5a8f26db6_00000000 _call_desc(_0RL_lcfn_7db828b5a8f26db6_10000000, "tick", 5);


  _invoke(_call_desc);



}
OpenRTM::_pof_ExtTrigExecutionContextService::~_pof_ExtTrigExecutionContextService() {}


omniObjRef*
OpenRTM::_pof_ExtTrigExecutionContextService::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::OpenRTM::_objref_ExtTrigExecutionContextService(ior, id);
}


::CORBA::Boolean
OpenRTM::_pof_ExtTrigExecutionContextService::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::OpenRTM::ExtTrigExecutionContextService::_PD_repoId) )
    return 1;
  if( omni::ptrStrMatch(id, RTC::ExecutionContextService::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, RTC::ExecutionContext::_PD_repoId) )
    return 1;

  if( omni::ptrStrMatch(id, SDOPackage::SDOService::_PD_repoId) )
    return 1;


  return 0;
}

const OpenRTM::_pof_ExtTrigExecutionContextService _the_pof_OpenRTM_mExtTrigExecutionContextService;

OpenRTM::_impl_ExtTrigExecutionContextService::~_impl_ExtTrigExecutionContextService() {}


::CORBA::Boolean
OpenRTM::_impl_ExtTrigExecutionContextService::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "tick") ) {

    _0RL_cd_7db828b5a8f26db6_00000000 _call_desc(_0RL_lcfn_7db828b5a8f26db6_10000000, "tick", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  
#ifndef _MSC_VER
  if( RTC__impl_ExecutionContextService::_dispatch(_handle) ) {
    return 1;
  }
#else
  // Work-around for incorrect MSVC code generation.
  if( ((RTC__impl_ExecutionContextService*)this)->
      RTC__impl_ExecutionContextService::_dispatch(_handle) ) {
    return 1;
  }
#endif


  return 0;
}

void*
OpenRTM::_impl_ExtTrigExecutionContextService::_ptrToInterface(const char* id)
{
  if( id == ::OpenRTM::ExtTrigExecutionContextService::_PD_repoId )
    return (::OpenRTM::_impl_ExtTrigExecutionContextService*) this;
  if( id == ::RTC::ExecutionContextService::_PD_repoId )
    return (::RTC::_impl_ExecutionContextService*) this;

  if( id == ::RTC::ExecutionContext::_PD_repoId )
    return (::RTC::_impl_ExecutionContext*) this;

  if( id == ::SDOPackage::SDOService::_PD_repoId )
    return (::SDOPackage::_impl_SDOService*) this;


  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::OpenRTM::ExtTrigExecutionContextService::_PD_repoId) )
    return (::OpenRTM::_impl_ExtTrigExecutionContextService*) this;
  if( omni::strMatch(id, ::RTC::ExecutionContextService::_PD_repoId) )
    return (::RTC::_impl_ExecutionContextService*) this;

  if( omni::strMatch(id, ::RTC::ExecutionContext::_PD_repoId) )
    return (::RTC::_impl_ExecutionContext*) this;

  if( omni::strMatch(id, ::SDOPackage::SDOService::_PD_repoId) )
    return (::SDOPackage::_impl_SDOService*) this;


  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
OpenRTM::_impl_ExtTrigExecutionContextService::_mostDerivedRepoId()
{
  return ::OpenRTM::ExtTrigExecutionContextService::_PD_repoId;
}

POA_OpenRTM::DataFlowComponent::~DataFlowComponent() {}

POA_OpenRTM::ExtTrigExecutionContextService::~ExtTrigExecutionContextService() {}

